|1:8|

    yarn add nuxt


    package.json:

        "name":"mastering-nuxt",
        "scripts":{
            "dev":"nuxt",
            "start":"nuxt start",
            "build":"nuxt build"
        }



    yarn dev

    yarn start  // run immediatly without build



9: config

    nuxt.config.js

        export default{
            componets:true,   // now you don't need to add HomeCard component: components:{HomeCard}
        }


10: head meta charset utf8 titleTemplate %s bodyAttrs htmlAttrs lang en hid name content hid title
    head

    index.vue:
        head(){
            return{
                title:'Home Page',
                meta:[{
                    name:'descrition,
                    content:'This is a homepage',
                    hid:'descrition'
                }]
            }
        }

    nuxt.config.js:
        head:{
            titleTemplate:'Matering Nuxt %s'  // title in head of index.vue replace %s,
            htmlAttrs:{lang:'en'},
            bodyAttrs:{class:['my-style']},
            meta:[{charset:'utf8'}]
        }


11:12: router id home params

    folder make path

    pages: mkdire home
    home: mkdire _id.vue

    for access to id ==> this.$route.params.id



13: a tag -- router-link -- nuxt-link -- no-prefetch prefetch

    a --> reload all page
    router-link --> do not reload all page
    nuxt-link --> have some option --> prefetch page -- and if you dont want to use it you can use no-prefetch

    nuxt-link ==> default preferch is true


    <nuxt-link to="/home.." no-preferch...><>

14:  prefetch config -- router -- preferchLink
    // you can set prefetch default to false and use `prefetch` to set true anywhere you want


15:
    layouts default red layout:'red' <nuxt/>

    mkdir layouts:
    touch default.vue:
        <div>
                ....
            <Nuxt/>
        </div>

16:18
    ref refs

    set ref="map" and use this.$refs.map


    api key ==> google map api
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNLrJhOMz6idD05pzfn5lhA-TAw-mAZCU"></script>
    <script type="module" src="./src/index.ts"></script>


    head -- scripts -- link -- how to use  map api -- token accessToken -- marker -mapbox  // todo

    mapbox api key:
      my accessToken:  'pk.eyJ1Ijoic2hhaHJva2hlbCIsImEiOiJjbDBudzExeDAwZjNzM2JtenczcHByZnlxIn0.hsLE0MhdDSdPitnkB3-Kfw'


19:



fallback:
js applications. A fallback function specifies an action that is performed whenever a call to a remote service fails. For example, you can use a fallback function to send a customized message about service failures to the client.

callback (initmap):
A JavaScript callback is a function which is to be executed after another function has finished execution. A more formal definition would be - Any function that is passed as an argument to another function so that it can be executed in that other function is called as a callback function.


=======================================================
3- Working with Google Maps
=======================================================

4:
    nuxt is adding the script tag and removing it as needed
        but since it's adding and removing a script tag
            the code in that url is run each time it does it
    and since nuxt is a single page app everything stays in the browser's memory
    we need a way to ensure that this script tag is ran only once the lifetime of the visitor's session


    the server is node
    node it has not idea what the windows is

    if you add script and add innerHtml for security reason that html coded.
    so if you want to decode:

    (dont use this:)
    __dangerouslyDisableSanitizersByTagID:{"map-init":['innerHtml']}

    skip tag: //todo

    <script skip= process.client && windows.mapLoaded ...

5:

    async and defer

    async very similar to defer
    it download javescript file asyncronously but it does not wait for anything else to executed


6:
    plugins:


    mkdir plugins

        use .client.js ==> just for browser
        use .server.js ==> just for server side
        use nothing    ==> for both



    nuxt config:
            plugins:[{src:'~/plugins/maps.client',mode:'client'}]

            or

            plugins:['~/plugins/maps.client']



    two argument: context, inject

    context content all router, vuex,....
    inject => with inject you can use $ and use it in code. take two argument. first:name, second: functions you want two use with this.$maps.[nameFunction]

    inject('maps', {showMap})

    this.$maps.showMap()....


=======================================================
4- Working with APIs
=======================================================
1:
    layout: error.vue
8:

    created vs mounted //todo
    computed //todo
    substring //todo
    formatDate // todo


9:










